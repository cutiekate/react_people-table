{"version":3,"sources":["PersonRow.tsx","PeopleTable.tsx","PeoplePage.tsx","api.tsx","App.tsx","index.tsx"],"names":["PersonName","person","to","slug","name","PersonRow","gender","sex","useParams","className","key","born","died","undefined","mother","motherName","father","fatherName","PeopleTable","people","sortingColumns","useState","data","setData","history","useHistory","location","useLocation","params","URLSearchParams","search","sortBy","get","sortOrder","useMemo","sort","a","b","localeCompare","map","item","onClick","includes","set","push","toString","PeoplePage","useEffect","fetch","then","response","json","res","preparedData","all","find","preparePerson","historyDebounce","debounce","value","query","toLocaleLowerCase","setValue","filteredPeople","filter","toLowerCase","type","placeholder","onChange","event","target","HomePage","App","exact","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f6ccde.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonName: React.FC<Props>\n= ({ person }) => (<Link to={`/people/${person.slug}`}>{person.name}</Link>);\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const gender = person.sex === 'm' ? 'blue' : 'red';\n  const { slug } = useParams();\n\n  return (\n    <tr className={person.slug === slug ? 'table__row is-selected' : 'table__row'} key={person.slug}>\n      <td className=\"table__data\"><PersonName person={person} /></td>\n      <td className={`table__data ${person.sex === 'm' || person.sex === 'f' ? gender : ''}`}>\n        {person.sex}\n      </td>\n      <td className=\"table__data\">{person.born}</td>\n      <td className=\"table__data\">{person.died}</td>\n      <td className=\"table__data\">{person.mother !== undefined ? (<PersonName person={person.mother} />) : person.motherName}</td>\n      <td className=\"table__data\">{person.father !== undefined ? (<PersonName person={person.father} />) : person.fatherName}</td>\n    </tr>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const columns = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n  const sortingColumns = ['Born', 'Died', 'Name', 'Sex'];\n  const [data, setData] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search);\n  const sortBy: string = params.get('sortBy') || '';\n  const sortOrder: string = params.get('sortOrder') || '';\n\n  useMemo(() => {\n    const sortFunc = (a: Person, b: Person) => {\n      switch (sortBy) {\n        case 'Sex':\n          return sortOrder === 'asc' ? a?.sex?.localeCompare(b?.sex) : b?.sex?.localeCompare(a?.sex);\n        case 'Born':\n          return sortOrder === 'asc' ? +a?.born - +b?.born : +b?.born - +a?.born;\n        case 'Died':\n          return sortOrder === 'asc' ? +b?.died - +a?.died : a?.died - +b?.died;\n        case 'Name':\n          return sortOrder === 'asc' ? a?.name?.localeCompare(b?.name) : b?.name?.localeCompare(a?.name);\n        default:\n          return 0;\n      }\n    };\n\n    if (sortBy !== '') {\n      people.sort(sortFunc);\n    }\n\n    setData(people);\n  }, [people, sortOrder, sortBy]);\n\n  return (\n    <table className=\"table\">\n      <thead className=\"\">\n        <tr>\n          {columns.map(item => (\n            <th\n              key={item}\n              onClick={() => {\n                if (sortingColumns.includes(item)) {\n                  params.set('sortBy', item);\n                  params.set('sortOrder', sortOrder === 'asc' ? 'desc' : 'asc');\n\n                  history.push({\n                    search: params.toString(),\n                  });\n                }\n              }}\n            >\n              {item}\n              {sortBy === item && (\n                <span>*</span>\n              )}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data\n        && (data.map((person) => (\n          <PersonRow key={person.slug} person={person} />\n        )))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\n\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from './api';\n\n\nfunction preparePerson(person: Person, all: Person[]): Person {\n  return {\n    ...person,\n    mother: all.find(mother => mother.name === person.motherName),\n    father: all.find(father => father.name === person.fatherName),\n  };\n}\n\nexport const PeoplePage = () => {\n  const [data, setData] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then((res) => {\n        const preparedData: Person[] = res.map((person: Person) => preparePerson(person, res));\n\n        setData(preparedData);\n      });\n  });\n\n  const history = useHistory();\n  const location = useLocation();\n  const applyFilter = (value: string) => {\n    history.push({\n      search: `?query=${value}`,\n    });\n  };\n\n  const historyDebounce = debounce(applyFilter, 1000);\n\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query')?.toLocaleLowerCase() || '';\n  const [value, setValue] = useState<string>();\n\n  const filteredPeople = data.filter((person) => person.name.toLowerCase().includes(query)\n    || person.fatherName?.toLowerCase().includes(query)\n    || person.motherName?.toLowerCase().includes(query));\n\n\n  return (\n    <>\n      <h3 className=\"title is-2 is-spaced header\">People page</h3>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"enter person name\"\n          value={value}\n          onChange={(event) => {\n            if (event.target) {\n              setValue(event.target.value);\n              historyDebounce(event.target.value);\n            }\n          }}\n        />\n      </div>\n      {data && (<PeopleTable people={filteredPeople} />)}\n    </>\n  );\n};\n","\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n","\nimport React from 'react';\nimport {\n  Route, NavLink, Redirect, Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport { PeoplePage } from './PeoplePage';\n\nconst HomePage = () => (\n  <h3 className=\"title is-2 is-spaced header\">Home</h3>\n);\n\nconst App = () => (\n  <>\n    <nav className=\"menu\">\n      <ul className=\"menu-list\">\n        <li>\n          <NavLink to=\"/\" exact className=\"nav__link\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/people\" className=\"nav__link\">\n            PeoplePage\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route\n        path=\"/people/:slug?\"\n        component={PeoplePage}\n      />\n      <Route component={() => <h3 className=\"title is-2 is-spaced header\">Page not found</h3>} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}